---
title: CSVPlatformer Structure
---
classDiagram
    class LevelState {
        - Level level
        + onAction()
        - configureInput()
        + Level getLevel()
        - loadLevel()
    }
    class LightingState
    class LightingState
    class PlayerState {
        - Player player
        - boolean jumpRequested;
        - boolean walkAway;
        - boolean walkLeft;
        - boolean walkRight;
        - boolean walkToward;
        - float jumpTime;
        + onAction()
        - configureInput()
        + Player getPlayer()
    }
    class BulletAppState
    class CSVPlatformer {
        <<singleton>>
        + CSVPlatformer INSTANCE
        + getPlayer()
        + getLevel()
        + getPhysicsSpace()
    }
    class LevelLoader {
        <<interface>>
        +loadLevel(String source) Level
    }
    class CSVLoader
    class RandLoader
    class Level {
        - Platform initialPlatform
        - Platform endPlatform
        - HashSet~Platform~ platforms
        - PhysicsTrigger restartPlane
        - createRestartPlane(int colNum)
        - createInitialPlatform
        + createEndPlatform(int colNum, int rowNum)
        + addPlatform(Platform platform, boolean addToSet)
        + removePlatform(Platform platform)
        + setInitialPlatform(Platform platform)
        + setEndPlatform(Platform platform)
        + movePlayerToStart()
        + destroy()
    }
    class Player {
        -Geometry playerGeom
        -playerControl
        +moveTo(Vector3f position)
    }
    class Platform {
        <<abstract>>
        # Geometry geometry
        # RigidBodyControl rigidBodyControl
        + Geometry getGeometry()
        + RigidBodyControl getRigidBodyControl()
    }
    class SimplePlatform
    class Config {
        +float INIT_PLATFORM_DEEP
        +float INIT_PLATFORM_Z
        +float CELL_DIM_X
        +float CELL_DIM_Z
        +float MOV_SPEED
        +float JUMP_SPEED
        +float JUMP_TIME
        +float GRAVITY
    }
    class StopWatch {
        + start()
        + stop()
        + reset()
        + setStartX()
        + setEndX()
        + destroy()
    }
    class StopWatchControl {
        - bool run
        - long time
        - float startX
        - float endX
        + start()
        + stop()
        + reset()
        + setStartX()
        + setEndX()
    }
    class PhysicsTrigger {
        <<abstract>>
        # PhysicsSpace physicsSpace;
        # PhysicsBody triggerBody;
    }

    CSVPlatformer .. LevelState
    CSVPlatformer .. PlayerState
    CSVPlatformer .. LightingState
    CSVPlatformer .. BulletAppState
    CSVPlatformer .. ChaseCameraAppState
    LevelLoader <|.. CSVLoader
    LevelLoader <|.. RandLoader
    LevelState "1" *-- "1" Level
    Level "1" *-- "2" Platform: initial/end platform
    Level "1" *-- "0..*" Platform: level platforms
    Platform <|.. SimplePlatform
    Level "1" *-- "1" StopWatch
    StopWatch "1" *-- "1" BitmapText
    StopWatch "1" *-- "1" StopWatchControl
    Level "1" *-- "1" PhysicsTrigger
    PhysicsTrigger <|-- RestartPlaneTouched
    PlayerState "1" *-- "1" Player

